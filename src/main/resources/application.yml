spring:
  profiles:
    active: ${SPRING_PROFILES_ACTIVE}
  application:
    name: match-commissioner
  main:
    lazy-initialization: true
  devtools:
    restart:
      enable: false

  data:
    mongodb:
      uri: ${MONGO_URI}
      database: ${MONGO_DB}
    redis:
      host: ${REDIS_HOST}
      port: ${REDIS_PORT}
      password: ${REDIS_PASSWORD}
      ssl:
        enabled: ${REDIS_SSL}
      timeout: 2000ms
      lettuce:
        security.protocol:  
          max-active: 16
          max-idle: 8
          min-idle: 2
          time-between-eviction-runs: 2000ms
    
    kafka:
    bootstrap-servers: ${KAFKA_BOOTSTRAP_SERVERS}
    properties:
      security.protocol: SASL_SSL
      sasl.mechanism: ${KAFKA_MECHANISM}
      sasl.jaas.config: >
        org.apache.kafka.common.security.scram.ScramLoginModule required
        username="${KAFKA_API_KEY}"
        password="${KAFKA_API_SECRET}";
    consumer:
      group-id: match-commissioner-group
      auto-offset-reset: earliest
      enable-auto-commit: true
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      value-deserializer: org.apache.kafka.common.serialization.StringDeserializer
    producer:
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: org.apache.kafka.common.serialization.StringSerializer
      acks: all
      retries: 3
      compression-type: lz4

management:
  endpoint:
    health:
      probes:
        enabled: true
      show-details: always
  endpoints:
    web:
      base-path: /api/v1/actuator/health
      exposure:
        include: health,info

  health: 
    redis:
      enabled: true
    mongo: 
      enabled: true
    kafka:
      enabled: false
    diskspace:
      enabled: true
    db:
      enabled: false
server:
  port: ${PORT:8080}
  servlet:
    context-path: ${SERVER_CONTEXT_PATH}
  compression: 
    enabled: true
    mimi-type: application/json,application/xml,text/html,text/plain
    min-response-size: 1024

jwt:
  expiration: ${JWT_EXPIRATION}
  expiration-refresh-token: ${JWT_REFRESH_EXPIRATION}
  secretKey: ${JWT_SECRET}

logging:
  file:
    name: logs/match-commissioner.log
  level:
    root: INFO
    org.springframework.web: INFO
    org.mongodb.driver: WARN
  logback:
    rollingpolicy:
      max-file-size: 10MB
      max-history: 10
  pattern:
    console: "%clr(%d{yyyy-MM-dd HH:mm:ss}){faint} [%thread] %-5level %cyan(%logger{15}) - %msg%n"
